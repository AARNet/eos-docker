#!/bin/sh

# Backup Destination Configuration:
# 1) Set BACKUP_METHOD to a) restic b) minio-client c) xrdcp
# a) Set RESTIC_PASSWORD, MINIO_ACCESS_KEY, MINIO_SECRET_KEY, COPY_SERVER, COPY_PATH
# b) Set MINIO_ACCESS_KEY, MINIO_SECRET_KEY, COPY_SERVER, COPY_PATH
# c) Set COPY_PATH, COPY_SERVER

# Function to process script output:
# Echo the output to stdout
# Echo errors with exit requests to a status file
# Variables:
# $1 = message level (INFO/WARNING/ERROR)
# $2 = message content (QDB Backup Failed)
# $3 = 0 => do not exit the script; n => do exit the script with exit code n (n>0)
function log () {
  level=$1
  message=$2
  do_exit=$3
  timestamp=$(date)
  full_message="[$timestamp]: [$level]: $message"
  echo $full_message
  if [ "$level" == "ERROR" ]; then
    echo $full_message >> $STATUS_DIR/errors
  fi
  if [ "$level" == "WARNING" ]; then
    echo $full_message >> $STATUS_DIR/warnings
  fi
  if [ "$do_exit" != "0" ]; then
    exit $do_exit
  fi
}

# remove all ipv6
sed '/ip6/d' /etc/hosts > /etc/tmphosts && cat /etc/tmphosts > /etc/hosts && rm -f /etc/tmphosts && cat /etc/hosts
sed '/localhost6/d' /etc/hosts > /etc/tmphosts && cat /etc/tmphosts > /etc/hosts && rm -f /etc/tmphosts && cat /etc/hosts

# check eos keytab exists, otherwise exit
if [ ! -s /etc/eos.keytab ]; then
  if [ -d /etc/k8screds ]; then
    cp /etc/k8screds/eos.keytab /etc/eos.keytab
    if [ -e /etc/k8screds/eos.client.keytab ]; then
      cp /etc/k8screds/eos.client.keytab /etc/eos.client.keytab
    else
      cp /etc/k8screds/eos.keytab /etc/eos.client.keytab
    fi
  else
    exit 1
  fi
else
  cp /etc/eos.keytab /etc/eos.client.keytab
fi

chown daemon:daemon /etc/eos.keytab && chmod 400 /etc/eos.keytab
chown daemon:daemon /etc/eos.client.keytab && chmod 400 /etc/eos.client.keytab

STATUS_DIR=${STATUS_DIR-/var/lib/quarkdb/monitoring}
if [ ! -d "$STATUS_DIR" ]; then
  mkdir $STATUS_DIR
  chown -R root: $STATUS_DIR
fi

BACKUP_METHOD=${BACKUP_METHOD-restic} # restic/minio-client/xrdcp
QDB_PORT=${QDB_PORT-7777}
EOS_NS_PATH=${EOS_NS_PATH-/var/lib/quarkdb}
BACKUP_PATH=${BACKUP_PATH-${EOS_NS_PATH}/backups}
BACKUP_INTERVAL=${BACKUP_INTERVAL-3600}

if [ -z ${SHARD} ] && [ "$BACKUP_METHOD" != "restic" ]; then
  log "ERROR" "No shard defined to run a backup for" "1"
fi

if [ -z ${COPY_SERVER} ]; then
  log "ERROR" "No copy destination defined" "2"
fi

if [ -z ${COPY_PATH} ]; then
  log "ERROR" "No copy path defined for destination server" "3"
fi


case $BACKUP_METHOD in

  restic)
    log "INFO" "Backup method set to restic..." "0"
    RESTIC_PASSWORD=${RESTIC_PASSWORD}
    MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
    MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    log "INFO" "Registering restic endpoint..." "0"
    if [ "$RESTIC_PASSWORD" == "" ]; then
      log "ERROR" "Restic password not specified" "4"
    fi
    echo ${RESTIC_PASSWORD} > /.resticpass
    export AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
    export AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_KEY}
    export RESTIC_REPOSITORY="s3:${COPY_SERVER}${COPY_PATH}"
    export RESTIC_PASSWORD_FILE=/.resticpass
    restic init
    retval=$?
    if [ $retval -ne 0 ]; then
      log "INFO" "<restic init> command returned non-zero. Either already registered or something wrong, lets see..." "0"
      restic snapshots
      retval=$?
      if [ $retval -ne 0 ]; then
        log "ERROR" "<restic snapshots> command returned non-zero. Something is wrong..." "5"
      else
        log "INFO" "<restic snapshots> command returned zero. Repo already registered and works..." "0"
      fi
    else
      log "INFO" "<restic init> command returned zero. New repo initialised..." "0"
    fi
    ;;
  minio-client)
    MC_HOST_ALIAS="backup-server"
    MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
    MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    log "INFO" "Backup method set to MinIO client..." "0"
    log "INFO" "Registering minio endpoint..." "0"
    mc config host add ${MC_HOST_ALIAS} ${COPY_SERVER} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY}
    retval=$?
    if [ $retval -ne 0 ]; then
      log "ERROR" "Unable to register minio endpoint" "6"
    fi
    log "INFO" "Testing destination directory contents..." "0"
    mc ls ${MC_HOST_ALIAS}${COPY_PATH}
    retval=$?
    if [ $retval -ne 0 ]; then
      log "ERROR" "Directory listing failed" "7"
    fi
    ;;
  xrdcp)
    log "INFO" "Backup method set to xrdcp" "0"
    ;;
  *)
    log "ERROR" "Backup method unknown: $BACKUP_METHOD" "8"
    ;;
  
esac


function check_status {
  # if qdb isn't running, we won't get the specific answer we want, so anything but LEADER means don't do a backup
  status=$(redis-cli -p ${QDB_PORT} -a "$(cat /etc/eos.client.keytab)" raft-info | grep STATUS | awk '{print $2}')
  redis-cli -p 7777 -a "$(cat /etc/eos.client.keytab)" quarkdb-health 2>&1| grep NODE-HEALTH | awk '{print $2}' > $STATUS_DIR/node_health
  redis-cli -p 7777 -a "$(cat /etc/eos.client.keytab)" quarkdb-health 2>&1 | grep FREE-SPACE | awk '{print $1}' > $STATUS_DIR/node_df
  redis-cli -p 7777 -a "$(cat /etc/eos.client.keytab)" quarkdb-health 2>&1 | grep PART-OF-QUORUM | awk '{print $1}' > $STATUS_DIR/node_quorum_member
  if [ "$status" == "LEADER" ]; then
    redis-cli -p 7777 -a "$(cat /etc/eos.client.keytab)" quarkdb-health 2>&1 | grep QUORUM-STABILITY | awk '{print $1}' > $STATUS_DIR/node_quorum_stability
  else
    echo "GREEN" > $STATUS_DIR/node_quorum_stability
  fi
  sm_mtime=$(date -d "$(stat $EOS_NS_PATH/eosns/current/state-machine/MANIFEST* 2>&1 | grep Modify | awk -F 'Modify: ' '{print $2}' | awk -F '+' '{print $1}')" "+%s")
  rj_mtime=$(date -d "$(stat $EOS_NS_PATH/eosns/current/raft-journal/MANIFEST* 2>&1 | grep Modify | awk -F 'Modify: ' '{print $2}' | awk -F '+' '{print $1}')" "+%s")
  now=$(date "+%s")
  echo $(( $now - $sm_mtime )) > $STATUS_DIR/node_sm_manifest_mtime_delta
  echo $(( $now - $rj_mtime )) > $STATUS_DIR/node_rj_manifest_mtime_delta
  
  echo $status
}

function do_backup {
  log "INFO" "starting backup process on leader $(hostname -f).." "0"

  # get raft checkpoint
  log "INFO" "creating raft checkpoint.." "0"
  redis-cli -p ${QDB_PORT} -a "$(cat /etc/eos.client.keytab)" raft-checkpoint ${BACKUP_PATH}
  retval=$?
  if [ $retval -ne 0 ]; then
    log "ERROR" "QDB Raft Checkpoint create failed" "9"
  fi
  
  case $BACKUP_METHOD in

    restic)
      restic --verbose backup ${BACKUP_PATH}
      retval=$?
      if [ $retval -ne 0 ]; then
        log "ERROR" "Backup failed with return code ${retval}" "10"
      fi
      log "INFO" "Backup complete!" "0"
      log "INFO" "Cleaning up old backups..." "0"
      restic forget --keep-within 1m --prune --verbose # Keep only a month worth of backups
	  retval=$?
      if [ $retval -ne 0 ]; then
        log "WARNING" "Old backup cleanup failed with return code ${retval}" "0"
      fi
      log "INFO" "Checking repo integrity..." "0"
      restic check
	  retval=$?
      if [ $retval -ne 0 ]; then
        log "WARNING" "Restic repo integrity check failed with return code ${retval}" "0"
      fi
      log "INFO" "Sleeping ZZZZ..." "0"
      ;;
    minio-client)
      log "INFO" "Compressing quarkdb backup..." "0"
      file=${SHARD}.$(date +%Y%m%d%H%M%S).tar.gz
      tar -czvf ${EOS_NS_PATH}/${file} ${BACKUP_PATH}
	  retval=$?
      if [ $retval -ne 0 ]; then
        log "ERROR" "tar command failed with return code ${retval}" "11"
      fi
      mc cp ${EOS_NS_PATH}/${file} ${MC_HOST_ALIAS}${COPY_PATH}
	  retval=$?
      if [ $retval -ne 0 ]; then
        log "ERROR" "mc cp command failed with return code ${retval}" "12"
      fi
      log "INFO" "cleaning up files..." "0"
      rm ${EOS_NS_PATH}/${file}
	  retval=$?
      if [ $retval -ne 0 ]; then
        log "WARNING" "Unable to delete local raft checkpoint tar. rm command failed with return code ${retval}" "13"
      fi
      ;;
    xrdcp)
      log "INFO" "Compressing quarkdb backup..." "0"
      file=${SHARD}.$(date +%Y%m%d%H%M%S).tar.gz
      tar -czvf ${EOS_NS_PATH}/${file} ${BACKUP_PATH}
	  retval=$?
      if [ $retval -ne 0 ]; then
        log "ERROR" "tar command failed with return code ${retval}" "14"
      fi
      log "INFO" "Shipping quarkdb backup to ${COPY_SERVER}..." "0"
      xrdcp ${EOS_NS_PATH}/${file} root://${COPY_SERVER}:1094/${COPY_PATH}
	  retval=$?
      if [ $retval -ne 0 ]; then
        log "ERROR" "xrdcp command failed with return code ${retval}" "15"
      fi
      log "INFO" "Cleaning up files..." "0"
      rm ${EOS_NS_PATH}/${file}
	  retval=$?
      if [ $retval -ne 0 ]; then
        log "WARNING" "Unable to delete local raft checkpoint tar. rm command failed with return code ${retval}" "16"
      fi
      ;;
  
  esac  
  
  rm -rf ${BACKUP_PATH}

}

while :; do
  STATUS=$(check_status)
  if [ "${STATUS}" == "LEADER" ]; then
    do_backup
  fi
    sleep ${BACKUP_INTERVAL}
done
